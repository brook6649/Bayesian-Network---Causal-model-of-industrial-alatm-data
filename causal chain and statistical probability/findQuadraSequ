function [sequ4prob,sequ3prob] = findQuadraSequ(F,sequ3prob,sequAllTimespan,sequLength,alarmIDNum)
% find all quadra-sequ (length==4) in dataset based on previously found (length==3) sequ

% sort out expected basic sequ (length==3)
alarmSet = F.FehlerID(1:alarmIDNum);
idx1 = zeros(height(sequ3prob),1);
for zz1 = 1:height(sequ3prob)
    if any(sequ3prob.single_ID(zz1) == alarmSet)  % IDs of all sequ2 are inside the top 9 alarmIDs.
        idx1(zz1) = 1;                            % Here we only need to test if the third ID also belongs to this range.
    end
end
sequ3prob(idx1==0,:) = [];

sequ3ID = max(sequ3prob.sequ_ID) + 1;

alarmIDs = F.FehlerID(1:alarmIDNum);
sequ4prob = double.empty(0,8);

% loop for each found (length==2) sequ
for qq1 = 1:height(sequ3prob)         % find triple sequ based on (lenth==2) sequences
    % add new column "sequID" to "sequ2prob_5"
    sequ3prob.sequID(qq1) = sequ3ID;
    newSequAllTimespan = sequAllTimespan;
    lenNewSequ = zeros(size(newSequAllTimespan,1));
    sequ3 = sequ3prob{qq1,[6,7,4]};
    % loop for each timespan
    for qq2 = 1:size(newSequAllTimespan,1)    % vacant sequ in this timespan
        if newSequAllTimespan(qq2,1) == 0
            continue
        end
        sequ = newSequAllTimespan( qq2, 1:sequLength(qq2) );
        firAlaIdx = find( sequ == sequ3(1) );
        numFirAla = length(firAlaIdx);
        secAlaIdx = find( sequ == sequ3(2) );
        numSecAla = length(secAlaIdx);
        lastAlaIdx = find( sequ == sequ3(3) );
        numLastAla = length(lastAlaIdx);
        if qq2 < size(newSequAllTimespan,1)
            sequNext = newSequAllTimespan( qq2+1, 1:sequLength(qq2+1) );
            firAlaIdxNext = find( sequNext == sequ3(1) );
            numFirAlaNext = length(firAlaIdxNext);
            secAlaIdxNext = find( sequNext == sequ3(2) );
            numSecAlaNext = length(secAlaIdxNext);
            lastAlaIdxNext = find( sequNext == sequ3(3) );
            numLastAlaNext = length(lastAlaIdxNext);
        end
        if numFirAla > 0 && numSecAla > 0 && numLastAla > 0
            for qq3 = 1:length(numFirAla)
                if qq3 < length(numFirAla)
                    % length of 'logicIndex' is the length of 'lastAlaIdx'
                    logicIndex = lastAlaIdx > firAlaIdx(qq3) & lastAlaIdx < firAlaIdx(qq3+1);
                    % the index of found third alarmID in this range
                    FoundLastAlaIdx = lastAlaIdx(logicIndex);
                    rr1 = 0;
                    while rr1 < length(FoundLastAlaIdx)
                        if any(logicIndex) && any( secAlaIdx > firAlaIdx(qq3) && secAlaIdx < FoundLastAlaIdx(rr1+1) )
                            % index of the alarm sequ interval,which should be replaced with new "sequID"
                            idxInterval(1) = firAlaIdx(qq3);
                            idxInterval(2) = FoundLastAlaIdx(rr1+1);
                            newSequAllTimespan(qq2, idxInterval(1)) = sequ3ID;
                            newSequAllTimespan(qq2, idxInterval(1)+1:idxInterval(2)) = 0;
                            break
                        else
                            rr1 = rr1 + 1;
                        end
                    end
                elseif any( lastAlaIdx > firAlaIdx(qq3) ) && any( secAlaIdx > firAlaIdx(qq3) )     % here: 'qq3' is the last index, 'qq3' equals 'end'
                    logicIndex = lastAlaIdx > firAlaIdx(qq3);
                    FoundLastAlaIdx = lastAlaIdx(logicIndex);
                    rr2 = 0;
                    while rr2 < length(FoundLastAlaIdx)
                        if any(secAlaIdx < FoundLastAlaIdx(rr2+1))
                            % index of the alarm sequ interval,which should be replaced with new "sequID"
                            idxInterval(1) = firAlaIdx(qq3);
                            idxInterval(2) = FoundLastAlaIdx(rr2+1);
                            newSequAllTimespan(qq2, idxInterval(1)) = sequ3ID;
                            newSequAllTimespan(qq2, idxInterval(1)+1:idxInterval(2)) = 0;
                            break
                        else
                            rr2 = rr2 + 1;
                        end
                    end
                end
            end
            
            if firAlaIdx(end) > lastAlaIdx(end) && qq2 < size(newSequAllTimespan,1)
                
                if numLastAlaNext > 0 && numSecAlaNext > 0 && numFirAlaNext > 0
                    logicIdx_secAla = secAlaIdxNext < firAlaIdxNext(1);
                    logicIdx_lastAla = lastAlaIdxNext < firAlaIdxNext(1);
                    FoundLastAlaIdx = lastAlaIdxNext(logicIdx_lastAla);
                    if any(logicIdx_secAla) && any(logicIdx_lastAla)
                        % index of the alarm sequ interval,which should be replaced with new "sequID"
                        rr3 = 0;
                        while rr3 < length(FoundLastAlaIdx)
                            if any(secAlaIdxNext < FoundLastAlaIdx(rr3+1))
                                % index of the alarm sequ interval,which should be replaced with new "sequID"
                                idxInterval(1) = firAlaIdx(end);
                                idxInterval(2) = FoundLastAlaIdx(rr3+1);
                                newSequAllTimespan(qq2, idxInterval(1)) = sequ3ID;
                                newSequAllTimespan(qq2, idxInterval(1)+1:end) = 0;
                                newSequAllTimespan(qq2+1, 1:idxInterval(2)) = 0;
                                break
                            else
                                rr3 = rr3 + 1;
                            end
                        end
                    end
                elseif numFirAlaNext==0 && numSecAlaNext > 0 && numLastAlaNext > 0
                    rr4 = 0;
                    while rr4 < length(lastAlaIdxNext)
                        if any(secAlaIdxNext < lastAlaIdxNext(rr4+1))
                            % index of the alarm sequ interval,which should be replaced with new "sequID"
                            idxInterval(1) = firAlaIdx(end);
                            idxInterval(2) = lastAlaIdxNext(rr4+1);
                            newSequAllTimespan(qq2, idxInterval(1)) = sequ3ID;
                            newSequAllTimespan(qq2, idxInterval(1)+1:end) = 0;
                            newSequAllTimespan(qq2+1, 1:idxInterval(2)) = 0;
                            break
                        else
                            rr4 = rr4 + 1;
                        end
                    end
                end
            end
        elseif numFirAla > 0 && numLastAla == 0 && qq2 < size(newSequAllTimespan,1)
            
            if numSecAla > 0 && numLastAlaNext > 0
                idxInterval(1) = firAlaIdx(end);
                idxInterval(2) = lastAlaIdxNext(1);
                newSequAllTimespan(qq2, idxInterval(1)) = sequ3ID;
                newSequAllTimespan(qq2, idxInterval(1)+1:end) = 0;
                newSequAllTimespan(qq2+1, 1:idxInterval(2)) = 0;
            elseif numSecAla == 0 && numSecAlaNext > 0 && numLastAlaNext > 0
                rr5 = 0;
                while rr5 < length(lastAlaIdxNext)
                    if any(secAlaIdxNext < lastAlaIdxNext(rr5+1))
                        % index of the alarm sequ interval,which should be replaced with new "sequID"
                        idxInterval(1) = firAlaIdx(end);
                        idxInterval(2) = lastAlaIdxNext(rr5+1);
                        newSequAllTimespan(qq2, idxInterval(1)) = sequ3ID;
                        newSequAllTimespan(qq2, idxInterval(1)+1:end) = 0;
                        newSequAllTimespan(qq2+1, 1:idxInterval(2)) = 0;
                        break
                    else
                        rr5 = rr5 + 1;
                    end
                end
            end
        end
        newSequ = newSequAllTimespan(qq2,:);
        newSequ = newSequ(newSequ~=0);
        lenNewSequ(qq2) = length(newSequ);
        newSequAllTimespan(qq2,1:lenNewSequ(qq2)) = newSequ;
        newSequAllTimespan(qq2,lenNewSequ(qq2)+1:end) = 0;
    end
    
    % find triple sequ (append another alarmID to the end of new sequIDs)
    IDs = alarmIDs;
    IDs( IDs==sequ3(1) | IDs==sequ3(2) | IDs==sequ3(3)) = [];
    rowNum = size(sequ4prob,1);
    sequ4prob(rowNum+1:rowNum+length(IDs),:) = sequ4.findNewSequBasedOn3(sequ3ID,IDs,newSequAllTimespan,lenNewSequ);
   
    sequ3ID = sequ3ID + 1;
end


% probability and dependency

sequ4prob( sequ4prob(:,1)==0,:) = [];
sequ4prob(:,2:4) = sequ4prob(:,1:3);
for qq5 = 1:size(sequ4prob,1)
    % 4.th column: probability
    sequ4prob(qq5,1) = sequ4prob(qq5,2)/sum( sequ4prob(:,2) );
    
    %     % 5.th column: causal dependence of the two alarms in a sequence
    %     % for instance: The dependence of B on A of sequence [A B]
    %     % is acquaired through dividing all occurrences of [A B] [C B] [D B] [E B] .... by occurrence of [A B]
    %     sequ2prob(qq1,1) = sequ2prob(qq1,3)/sum( sequ2prob( sequ2prob(:,5) == sequ2prob(qq1,5),3 ) );
    
    % occurrence of a single alarmID
    sequ4prob(qq5,6) = sequ3prob{ sequ4prob(qq5,3) == sequ3prob.sequID,6};
    sequ4prob(qq5,7) = sequ3prob{ sequ4prob(qq5,3) == sequ3prob.sequID,7};
    sequ4prob(qq5,8) = sequ3prob{ sequ4prob(qq5,3) == sequ3prob.sequID,4};
end


sequ4prob = array2table(sequ4prob);
sequ4prob.Properties.VariableNames = {'prob' 'sequ_occur' 'sequ_ID' 'single_ID'...
    'separator' 'sequ3_ID1' 'sequ3_ID2' 'sequ3_ID3'};

% keep only sequences(length==4) whose alarmIDs are all inside of the predifined alarmSet
idx2 = zeros(height(sequ4prob),1);
for zz1 = 1:height(sequ4prob)
    if any(sequ4prob.single_ID(zz1) == alarmSet)
        idx2(zz1) = 1;
    end
end
sequ4prob(idx2==0,:) = [];
sequ4prob = sortrows(sequ4prob, [2,3] ,'descend');



end