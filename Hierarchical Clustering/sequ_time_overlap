function [ sequence_time ] = sequ_time_overlap( T, F, ts)
%% Detect alarm sequence for a time span "ts"


if nargin < 3
    ts = datenum(minutes(10));     % time span in form of datenum ( 10 seconds )
end


% select the most frequently occured alarms and detect alarm sequences started by them (occurrence >= 100)
F = F( F.frequency >= 5 , : );
sequence_time = [];

 for ii = 1:size(F,1)
    clear timespan n
    timespan(:,1) = T.datenum( T.FehlerID == F{ii,1} );
    timespan(:,2) = timespan(:,1) + ts;
    n = size(timespan,1);
    
    % modify "sequ_time"
    % save sequence with length <= 20 (this number needs to change if a longer timespan is set above)
                                    % (or dimension will be surpassed) 
    clear sequ_time
    sequ_time = zeros(n,50);

    sequ_time(:,2) = F{ii,1};
    
    for qq = 1:n
        clear sequ
        % save a column vector in a row vector
        sequ = T.FehlerID( T.datenum > timespan(qq,1) & T.datenum < timespan(qq,2) ).';
        len = length( sequ );
        
        idx = all(sequ_time(:,3:len+3) == [sequ,0], 2);
        if any( idx )   % if this sequence already exists, accumulate its occurrence time
            sequ_time( idx, 1 ) = sequ_time( idx, 1 ) + 1;
        else   % save new sequence and set original occurrence as 1
            sequ_time(qq,3:len+2) = sequ;
            sequ_time(qq,1) = 1;  
        end
       
    end
    % delete rows of vacant sequences
    sequ_time( sequ_time(:,3)==0, : ) = [];
    % Integrate all found sequences, which begin with different alarm IDs, into one collective table
    sequence_time(end+1:end+size(sequ_time,1),:) = sequ_time;
    
 end
 
% sequence_time = sortrows(sequence_time,[2,1],'descend');

end