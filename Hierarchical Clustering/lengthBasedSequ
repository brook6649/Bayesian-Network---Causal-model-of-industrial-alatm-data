function [ sequences, occurrences ] = lengthBasedSequ( data, w_length )
%FINDSEQUENCES Summary of this function goes here
%   Detailed explanation goes here
    if size(data,2)==1
        data = data(data~=0)';
    else
        data = data(data~=0);
    end
    if w_length <= length(data)    % when 'data' is matrix, length(data) return its column number.
        sequences(1,:)  = data(1:w_length);      % Column number of "data" is specified: there 
         occurrences(1,1) = 1;                   % see "hirarchicBasedSequ" row 158. (4) in this case
        i=1;
        while (i < (length(data)-w_length))
            i=i+1;
            if isnan(data(i + w_length - 1))
                i= i + w_length - 1;
            else
                tmp = (sequences == data(i : i + w_length-1));    % [sequence] rows: different sequences, columns:members of this sequence
                if (~all(tmp,2))                                  % all() : if all alarms in this sequence are identical
                    sequences(end+1,:)  = data(i:w_length+i-1);
                    occurrences(end+1,1) = 1;
                else               % condition true, only if the next sequence equals previous found sequences
                    occurrences(all(tmp,2),1) = occurrences(all(tmp,2),1) + 1;    % add 1 to occurence of this sequence      
                end
            end 
        end
        % extract indices 
        % after sorting rows of "occurences" in descending order
        [~,iSort] = sortrows(occurrences,-1);   
        occurrences = occurrences(iSort);      % rearrange "occurrences" and "sequences" with output indices
        sequences = sequences(iSort,:);
    else
        sequences=[];
        occurrences=[];
    end
    
end

